# Stage 1: Compile the planner
Bootstrap: docker
From: ubuntu:kinetic
Stage: build

%files
    .

%post
    apt-get update
    apt-get -y install --no-install-recommends cmake make g++ python3 pypy3 automake pkg-config libgmp10 libgmp-dev libreadline-dev  libsqlite3-dev sqlite3


    # TODO: Fix compilation error in newer g++
    # rm -rf fd-symbolic/builds
    # cd fd-symbolic
    # pypy3 build.py
    # strip --strip-all builds/release64/bin/preprocess builds/release64/bin/downward
    # cd ..


    mkdir yap
    cd learning/yap
    mkdir build
    cd build

    cmake .. -DCMAKE_INSTALL_PREFIX=/yap
    make
    make install

    # TODO Install lab


# Stage 2: Run the planner
Bootstrap: docker
From: ubuntu:kinetic
Stage: run

# Copy planner binary and required files from Stage 1.
%files from build

    learn.py
    training

    fd-symbolic/builds/release64/bin/
    fd-symbolic/fast-downward.py
    fd-symbolic/driver

    learning/learning-aleph
    learning/learning-sklearn
    learning/aleph/aleph.pl
    learning/translate

%post
    apt-get update
   # apt-get -y install --no-install-recommends default-jre-headless pypy python ruby
    apt-get clean
    rm -rf /var/lib/apt/lists/*

%runscript
    #! /bin/bash
    set -euo pipefail

    DOMAIN_KNOWLEDGE_FILE="$1"
    DOMAIN_FILE="$2"
    shift 2  # Forget first two arguments.
    PROBLEM_FILES=("$@")  # All remaining arguments are problem files.

    export PYTHONPATH=/lab

    /preprocess-tasks.py "$DOMAIN_FILE" "${PROBLEM_FILES[@]}"
    /tuning/tuning_exp.py --tuner-timeout 10 --repo /cedalion/ --track sat --response quality --trainingset instances.txt --parameters /parameters/fd-sat.txt --numruns 1 --path tuning-exp 1 2 3 4 5
    mv tuning-exp-eval/configs.py "$DOMAIN_KNOWLEDGE_FILE"

%labels
Name        Fast Downward SMAC 2014
Description Single Fast Downward configuration, optimized with SMAC for the given training tasks.
Authors     Jendrik Seipp <jendrik.seipp@liu.se>, Silvan Sievers <silvan.sievers@unibas.ch, Frank Hutter <fh@informatik.uni-freiburg.de>
License     GPL 3
Tracks      single-core
SupportsDerivedPredicates                       yes
SupportsUniversallyQuantifiedPreconditions      yes
SupportsExistentiallyQuantifiedPreconditions    yes
SupportsUniversallyQuantifiedEffects            yes
SupportsNegativePreconditions                   yes
SupportsEqualityPreconditions                   yes
SupportsInequalityPreconditions                 yes
SupportsConditionalEffects                      yes
SupportsImplyPreconditions                      yes
